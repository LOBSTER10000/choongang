서브 쿼리
select * from emp 
where sal > (select sal from emp where ename = 'JONES')
-> emp의 이름이 존스인 사람의 급여보다 많은 급여를 가진 사람의
데이터를 조회하라

select * from emp 
where hiredate < (select hiredate from emp where ename = 'JONES')
-> 입사 날짜가 존스의 입자날짜보다 먼저 들어온 사람을 조회하라

서브쿼리는 ()안에 보조적인 쿼리문을 하나 더 추가하여 하나의 
데이터값으로 넣어주는 것

select * from emp e, dept d
  where e.deptno = d.deptno
     and e.deptno = 20
     and e.sal > (select avg(sal) from emp)
-> join으로 deptno를 맞췄을때 부서정보가 20인 사람들 중에서
월급이 평균 연봉보다 높은 사람의 정보를 출력하라.

다중행 서브쿼리

select * from emp
 where deptno in (20, 30)
-> 부서 번호가 20번 30번인 사람들의 정보를 조회하라
(in은 집합의 개념으로 파악하면 편하다)

select * from emp
 where sal in (select max(sal) from emp group by deptno)
-> group by로 부서 별로 묶어서 가장 연봉이 높은 사람들을 출력하라.

select * from emp
 where sal = any (select max(sal) from emp group by deptno)
  -> any(=some)는 그 중에 하나라는 의미 즉  any가 없다면 sal (12)개와 (3)개가
같을 수 없으므로 그 중에서 겹치는 값을 출력하는 것 
(그러나 in이 조금 더 편리한 기능이다)

select * from emp;
where sal < any
(select sal from emp where deptno =30)
 
-> deptno 부서의 번호가 30번인 사람의 연봉 값 중 어떤 사람이 
    전체의 연봉값보다 적을 경우 전체 데이터를 출력하라
   (즉, deptno의 최대 연봉 값은 2850이므로 이보다 적은 사람들의 
     데이터를 출력하라)

select * from emp
where sal > all
(select sal from emp where deptno =30)
 -> all(은 and의 개념으로 전부 충족하는 사람만 나타낸다)
deptno 부서 번호의 30번인 사람의 연봉보다 연봉이 큰사람의 정보를 
나타내라.

select * from emp

where exists (select dname from dept where deptno =10)
  -> 아래에 있는 exists가 존재할 경우
select * from emp를 출력하라 (사실상 위 두 구문이 연관이 희박함)


-------------
from 절에 서브쿼리
select * from (select * from emp where deptno = 30) e30, dept d
   where e30.deptno = d.deptno

= 
with 
e30 as (select * from emp where deptno = 30)
select * from e30, dept d
   where e30.deptno = d.deptno

-> from에 deptno가 30번인 사람을 기준으로 from을 잡는다
     with는 별칭을 정한 기준을 뒤에 절에 사용할 수 있다.

-----------------
select절에 서브쿼리

select empno, ename, job, sal,
 (select grade from salgrade where e.sal between losal
    and hisal) as salgrade, 
deptno, 
(select dname from dept where e.deptno = dept.deptno) as dname
    from emp e
   

  
